#!/usr/bin/env ruby

require 'Date'
require 'yaml'
require 'Mercenary'
require 'Jekyll'

module Commands
  class Base
    attr_reader :args, :options

    def initialize(args, options)
      @args = args
      @options = options
    end

    def run!
      raise NotImplementedError, "class must implement run! method"
    end
  end

  class Post < Base
    def run!
      if File.exist?(file_path)
        puts "File already exists at #{file_path}. Exiting..."
        exit 1
      end

      File.open(file_path, "w") do |f|
        f.puts(file_content)
      end

      puts "Created post \"#{title}\" at #{file_path}"
    end

    private

    def file_path
      "_posts/#{file_name}"
    end

    def file_name
      "#{formatted_date}-#{slug}.md"
    end

    def file_content
      [
        post_front_matter,
        post_body
      ].join("\n")
    end

    def post_front_matter
      {
        "layout" => layout,
        "title" => title,
        "date" => formatted_datetime,
        "permalink" => permalink,
      }.to_yaml + "---"
    end

    def post_body
      ""
    end

    def layout
      "post"
    end

    def title
      args[0]
    end

    def permalink
      "/blog/#{slug}"
    end

    def slug
      @slug ||= options["slug"] || Jekyll::Utils.slugify(title)
    end

    def date
      @date ||= options["date"] ? DateTime.parse(options["date"]) : Time.now
    end

    def formatted_date
      date.strftime "%Y-%m-%d"
    end

    def formatted_datetime
      date.strftime "%Y-%m-%d %H:%M %z"
    end
  end
end

Mercenary.program(:cli) do |p|
  p.version "0.0.1"
  p.description "CLI for website"
  p.syntax "cli <subcommand> [options]"

  p.command(:post) do |c|
    c.syntax "post TITLE"
    c.description "Creates a new post with the given TITLE"
    c.option "date", "-d DATE", "--date DATE", "Specify the post date. Defaults to Time.now"
    c.option "slug", "-s SLUG", "--slug SLUG", "Specify the post slug. Defaults to slugifying the TITLE"

    c.action do |args, options|
      Commands::Post.new(args, options).run!
    end
  end
end
